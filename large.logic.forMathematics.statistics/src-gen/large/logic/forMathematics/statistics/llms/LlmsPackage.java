/**
 * generated by Xtext 2.35.0
 */
package large.logic.forMathematics.statistics.llms;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see large.logic.forMathematics.statistics.llms.LlmsFactory
 * @model kind="package"
 * @generated
 */
public interface LlmsPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "llms";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.logic.large/forMathematics/statistics/Llms";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "llms";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LlmsPackage eINSTANCE = large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl.init();

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.OperationsImpl <em>Operations</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.OperationsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOperations()
   * @generated
   */
  int OPERATIONS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__NAME = 0;

  /**
   * The feature id for the '<em><b>Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__FUNC = 1;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__VARS = 2;

  /**
   * The feature id for the '<em><b>Conditional</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__CONDITIONAL = 3;

  /**
   * The feature id for the '<em><b>Loops</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__LOOPS = 4;

  /**
   * The feature id for the '<em><b>Print</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS__PRINT = 5;

  /**
   * The number of structural features of the '<em>Operations</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.FunctionsImpl <em>Functions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.FunctionsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getFunctions()
   * @generated
   */
  int FUNCTIONS = 1;

  /**
   * The feature id for the '<em><b>Output</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONS__OUTPUT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONS__NAME = 1;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONS__PARAMS = 2;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONS__BODY = 3;

  /**
   * The number of structural features of the '<em>Functions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ParametersOutptutImpl <em>Parameters Outptut</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ParametersOutptutImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParametersOutptut()
   * @generated
   */
  int PARAMETERS_OUTPTUT = 2;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_OUTPTUT__PARAM = 0;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_OUTPTUT__PARAMS = 1;

  /**
   * The number of structural features of the '<em>Parameters Outptut</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_OUTPTUT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ParametersfuncImpl <em>Parametersfunc</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ParametersfuncImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParametersfunc()
   * @generated
   */
  int PARAMETERSFUNC = 3;

  /**
   * The number of structural features of the '<em>Parametersfunc</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERSFUNC_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.BodiesImpl <em>Bodies</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.BodiesImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBodies()
   * @generated
   */
  int BODIES = 4;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODIES__VAR = 0;

  /**
   * The feature id for the '<em><b>Loops</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODIES__LOOPS = 1;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODIES__COND = 2;

  /**
   * The number of structural features of the '<em>Bodies</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODIES_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.GenericVariableImpl <em>Generic Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.GenericVariableImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGenericVariable()
   * @generated
   */
  int GENERIC_VARIABLE = 7;

  /**
   * The number of structural features of the '<em>Generic Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERIC_VARIABLE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.varParmArgsImpl <em>var Parm Args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.varParmArgsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getvarParmArgs()
   * @generated
   */
  int VAR_PARM_ARGS = 5;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_PARM_ARGS__OP = GENERIC_VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_PARM_ARGS__NAME = GENERIC_VARIABLE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Data Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_PARM_ARGS__DATA_TYPE = GENERIC_VARIABLE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_PARM_ARGS__EXP = GENERIC_VARIABLE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>var Parm Args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_PARM_ARGS_FEATURE_COUNT = GENERIC_VARIABLE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ExpressionImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OP = 0;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.LoopsImpl <em>Loops</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.LoopsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLoops()
   * @generated
   */
  int LOOPS = 8;

  /**
   * The number of structural features of the '<em>Loops</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOPS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ForsImpl <em>Fors</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ForsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getFors()
   * @generated
   */
  int FORS = 9;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORS__VAR = LOOPS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORS__NUMBER = LOOPS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORS__BODY = LOOPS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Fors</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORS_FEATURE_COUNT = LOOPS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.WhilesImpl <em>Whiles</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.WhilesImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getWhiles()
   * @generated
   */
  int WHILES = 10;

  /**
   * The feature id for the '<em><b>Logical</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILES__LOGICAL = LOOPS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Bodie</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILES__BODIE = LOOPS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Whiles</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILES_FEATURE_COUNT = LOOPS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ConditionalsImpl <em>Conditionals</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ConditionalsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getConditionals()
   * @generated
   */
  int CONDITIONALS = 11;

  /**
   * The feature id for the '<em><b>Ifs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONALS__IFS = 0;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONALS__ELSEIF = 1;

  /**
   * The feature id for the '<em><b>Elses</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONALS__ELSES = 2;

  /**
   * The number of structural features of the '<em>Conditionals</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONALS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.IfsImpl <em>Ifs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.IfsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getIfs()
   * @generated
   */
  int IFS = 12;

  /**
   * The feature id for the '<em><b>Lg</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFS__LG = 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFS__BODY = 1;

  /**
   * The number of structural features of the '<em>Ifs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ElseIfsImpl <em>Else Ifs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ElseIfsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getElseIfs()
   * @generated
   */
  int ELSE_IFS = 13;

  /**
   * The feature id for the '<em><b>Logic Parms</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IFS__LOGIC_PARMS = 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IFS__BODY = 1;

  /**
   * The number of structural features of the '<em>Else Ifs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IFS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ElsesImpl <em>Elses</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ElsesImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getElses()
   * @generated
   */
  int ELSES = 14;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSES__BODY = 0;

  /**
   * The number of structural features of the '<em>Elses</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ParmsPrintImpl <em>Parms Print</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ParmsPrintImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParmsPrint()
   * @generated
   */
  int PARMS_PRINT = 15;

  /**
   * The number of structural features of the '<em>Parms Print</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARMS_PRINT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.CallFunctionImpl <em>Call Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.CallFunctionImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getCallFunction()
   * @generated
   */
  int CALL_FUNCTION = 16;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNCTION__OP = PARMS_PRINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Func</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNCTION__FUNC = PARMS_PRINT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNCTION__EXP = PARMS_PRINT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Call Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNCTION_FEATURE_COUNT = PARMS_PRINT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.CallVariableImpl <em>Call Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.CallVariableImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getCallVariable()
   * @generated
   */
  int CALL_VARIABLE = 17;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_VARIABLE__OP = GENERIC_VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_VARIABLE__VARS = GENERIC_VARIABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Call Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_VARIABLE_FEATURE_COUNT = GENERIC_VARIABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.OnlyVarImpl <em>Only Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.OnlyVarImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOnlyVar()
   * @generated
   */
  int ONLY_VAR = 18;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONLY_VAR__NAME = GENERIC_VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Data Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONLY_VAR__DATA_TYPE = GENERIC_VARIABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Only Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ONLY_VAR_FEATURE_COUNT = GENERIC_VARIABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.AssignmentImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 19;

  /**
   * The feature id for the '<em><b>Vars</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VARS = GENERIC_VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__EXP = GENERIC_VARIABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = GENERIC_VARIABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.LogicalParamsImpl <em>Logical Params</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.LogicalParamsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLogicalParams()
   * @generated
   */
  int LOGICAL_PARAMS = 20;

  /**
   * The number of structural features of the '<em>Logical Params</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_PARAMS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.OperationImpl <em>Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.OperationImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOperation()
   * @generated
   */
  int OPERATION = 21;

  /**
   * The number of structural features of the '<em>Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.LogicalOperationImpl <em>Logical Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.LogicalOperationImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLogicalOperation()
   * @generated
   */
  int LOGICAL_OPERATION = 22;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATION__BOOL_FUNC = LOGICAL_PARAMS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATION__LGIC_OP = LOGICAL_PARAMS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATION__LEFT = LOGICAL_PARAMS_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATION__RIGHT = LOGICAL_PARAMS_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Logical Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGICAL_OPERATION_FEATURE_COUNT = LOGICAL_PARAMS_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.LessThanImpl <em>Less Than</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.LessThanImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLessThan()
   * @generated
   */
  int LESS_THAN = 23;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_THAN__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_THAN__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_THAN__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_THAN__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Less Than</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_THAN_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.GreaterThanImpl <em>Greater Than</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.GreaterThanImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGreaterThan()
   * @generated
   */
  int GREATER_THAN = 24;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_THAN__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_THAN__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_THAN__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_THAN__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Greater Than</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_THAN_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.EqualImpl <em>Equal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.EqualImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getEqual()
   * @generated
   */
  int EQUAL = 25;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUAL__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUAL__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUAL__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUAL__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Equal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUAL_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.NotEqualImpl <em>Not Equal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.NotEqualImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNotEqual()
   * @generated
   */
  int NOT_EQUAL = 26;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EQUAL__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EQUAL__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EQUAL__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EQUAL__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Not Equal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EQUAL_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.LessOrEqualImpl <em>Less Or Equal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.LessOrEqualImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLessOrEqual()
   * @generated
   */
  int LESS_OR_EQUAL = 27;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_OR_EQUAL__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_OR_EQUAL__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_OR_EQUAL__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_OR_EQUAL__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Less Or Equal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LESS_OR_EQUAL_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.GreaterOrEqualImpl <em>Greater Or Equal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.GreaterOrEqualImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGreaterOrEqual()
   * @generated
   */
  int GREATER_OR_EQUAL = 28;

  /**
   * The feature id for the '<em><b>Bool Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_OR_EQUAL__BOOL_FUNC = LOGICAL_OPERATION__BOOL_FUNC;

  /**
   * The feature id for the '<em><b>Lgic Op</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_OR_EQUAL__LGIC_OP = LOGICAL_OPERATION__LGIC_OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_OR_EQUAL__LEFT = LOGICAL_OPERATION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_OR_EQUAL__RIGHT = LOGICAL_OPERATION__RIGHT;

  /**
   * The number of structural features of the '<em>Greater Or Equal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREATER_OR_EQUAL_FEATURE_COUNT = LOGICAL_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.BooleanFunctionImpl <em>Boolean Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.BooleanFunctionImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBooleanFunction()
   * @generated
   */
  int BOOLEAN_FUNCTION = 29;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_FUNCTION__PRIMARY = OPERATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_FUNCTION_FEATURE_COUNT = OPERATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.AndsImpl <em>Ands</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.AndsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAnds()
   * @generated
   */
  int ANDS = 30;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANDS__PRIMARY = BOOLEAN_FUNCTION__PRIMARY;

  /**
   * The number of structural features of the '<em>Ands</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANDS_FEATURE_COUNT = BOOLEAN_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.OrsImpl <em>Ors</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.OrsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOrs()
   * @generated
   */
  int ORS = 31;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORS__PRIMARY = BOOLEAN_FUNCTION__PRIMARY;

  /**
   * The number of structural features of the '<em>Ors</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORS_FEATURE_COUNT = BOOLEAN_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.NotsImpl <em>Nots</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.NotsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNots()
   * @generated
   */
  int NOTS = 32;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOTS__PRIMARY = BOOLEAN_FUNCTION__PRIMARY;

  /**
   * The number of structural features of the '<em>Nots</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOTS_FEATURE_COUNT = BOOLEAN_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.NorsImpl <em>Nors</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.NorsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNors()
   * @generated
   */
  int NORS = 33;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORS__PRIMARY = BOOLEAN_FUNCTION__PRIMARY;

  /**
   * The number of structural features of the '<em>Nors</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORS_FEATURE_COUNT = BOOLEAN_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.NandsImpl <em>Nands</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.NandsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNands()
   * @generated
   */
  int NANDS = 34;

  /**
   * The feature id for the '<em><b>Primary</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NANDS__PRIMARY = BOOLEAN_FUNCTION__PRIMARY;

  /**
   * The number of structural features of the '<em>Nands</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NANDS_FEATURE_COUNT = BOOLEAN_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.AritmeticOperationImpl <em>Aritmetic Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.AritmeticOperationImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAritmeticOperation()
   * @generated
   */
  int ARITMETIC_OPERATION = 35;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITMETIC_OPERATION__SUM = OPERATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Aritmetic Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITMETIC_OPERATION_FEATURE_COUNT = OPERATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.ExpressionsImpl <em>Expressions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.ExpressionsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getExpressions()
   * @generated
   */
  int EXPRESSIONS = 36;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONS__OP = EXPRESSION__OP;

  /**
   * The number of structural features of the '<em>Expressions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.PrimaryImpl <em>Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.PrimaryImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getPrimary()
   * @generated
   */
  int PRIMARY = 37;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__OP = EXPRESSIONS__OP;

  /**
   * The number of structural features of the '<em>Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FEATURE_COUNT = EXPRESSIONS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.DatasImpl <em>Datas</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.DatasImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDatas()
   * @generated
   */
  int DATAS = 38;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATAS__OP = PARMS_PRINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Datas</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATAS_FEATURE_COUNT = PARMS_PRINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.NumbersImpl <em>Numbers</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.NumbersImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNumbers()
   * @generated
   */
  int NUMBERS = 39;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBERS__OP = DATAS__OP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBERS__VALUE = DATAS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Numbers</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBERS_FEATURE_COUNT = DATAS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.StringsImpl <em>Strings</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.StringsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getStrings()
   * @generated
   */
  int STRINGS = 40;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGS__OP = DATAS__OP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGS__VALUE = DATAS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Strings</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGS_FEATURE_COUNT = DATAS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.BooleansImpl <em>Booleans</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.BooleansImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBooleans()
   * @generated
   */
  int BOOLEANS = 41;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEANS__OP = DATAS__OP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEANS__VALUE = DATAS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Booleans</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEANS_FEATURE_COUNT = DATAS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.DoublesImpl <em>Doubles</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.DoublesImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDoubles()
   * @generated
   */
  int DOUBLES = 42;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLES__OP = DATAS__OP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLES__VALUE = DATAS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Doubles</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLES_FEATURE_COUNT = DATAS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.PrintsImpl <em>Prints</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.PrintsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getPrints()
   * @generated
   */
  int PRINTS = 43;

  /**
   * The feature id for the '<em><b>Print</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINTS__PRINT = 0;

  /**
   * The number of structural features of the '<em>Prints</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.funOutputsImpl <em>fun Outputs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.funOutputsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getfunOutputs()
   * @generated
   */
  int FUN_OUTPUTS = 44;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_OUTPUTS__PARAMS = PARAMETERSFUNC_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>fun Outputs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_OUTPUTS_FEATURE_COUNT = PARAMETERSFUNC_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.SumImpl <em>Sum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.SumImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getSum()
   * @generated
   */
  int SUM = 45;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUM__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUM__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUM__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.SubsImpl <em>Subs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.SubsImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getSubs()
   * @generated
   */
  int SUBS = 46;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBS__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBS__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Subs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.DivitionImpl <em>Divition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.DivitionImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDivition()
   * @generated
   */
  int DIVITION = 47;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVITION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVITION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVITION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Divition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVITION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link large.logic.forMathematics.statistics.llms.impl.MultiplicationImpl <em>Multiplication</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see large.logic.forMathematics.statistics.llms.impl.MultiplicationImpl
   * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getMultiplication()
   * @generated
   */
  int MULTIPLICATION = 48;

  /**
   * The feature id for the '<em><b>Op</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__OP = EXPRESSIONS__OP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__LEFT = EXPRESSIONS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__RIGHT = EXPRESSIONS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Multiplication</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION_FEATURE_COUNT = EXPRESSIONS_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Operations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operations</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations
   * @generated
   */
  EClass getOperations();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Operations#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getName()
   * @see #getOperations()
   * @generated
   */
  EAttribute getOperations_Name();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Operations#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Func</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getFunc()
   * @see #getOperations()
   * @generated
   */
  EReference getOperations_Func();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Operations#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getVars()
   * @see #getOperations()
   * @generated
   */
  EReference getOperations_Vars();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Operations#getConditional <em>Conditional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditional</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getConditional()
   * @see #getOperations()
   * @generated
   */
  EReference getOperations_Conditional();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Operations#getLoops <em>Loops</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Loops</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getLoops()
   * @see #getOperations()
   * @generated
   */
  EReference getOperations_Loops();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Operations#getPrint <em>Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Print</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operations#getPrint()
   * @see #getOperations()
   * @generated
   */
  EReference getOperations_Print();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Functions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Functions</em>'.
   * @see large.logic.forMathematics.statistics.llms.Functions
   * @generated
   */
  EClass getFunctions();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Functions#getOutput <em>Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Output</em>'.
   * @see large.logic.forMathematics.statistics.llms.Functions#getOutput()
   * @see #getFunctions()
   * @generated
   */
  EReference getFunctions_Output();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Functions#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see large.logic.forMathematics.statistics.llms.Functions#getName()
   * @see #getFunctions()
   * @generated
   */
  EAttribute getFunctions_Name();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Functions#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Params</em>'.
   * @see large.logic.forMathematics.statistics.llms.Functions#getParams()
   * @see #getFunctions()
   * @generated
   */
  EReference getFunctions_Params();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Functions#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see large.logic.forMathematics.statistics.llms.Functions#getBody()
   * @see #getFunctions()
   * @generated
   */
  EReference getFunctions_Body();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.ParametersOutptut <em>Parameters Outptut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameters Outptut</em>'.
   * @see large.logic.forMathematics.statistics.llms.ParametersOutptut
   * @generated
   */
  EClass getParametersOutptut();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.ParametersOutptut#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see large.logic.forMathematics.statistics.llms.ParametersOutptut#getParam()
   * @see #getParametersOutptut()
   * @generated
   */
  EReference getParametersOutptut_Param();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.ParametersOutptut#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see large.logic.forMathematics.statistics.llms.ParametersOutptut#getParams()
   * @see #getParametersOutptut()
   * @generated
   */
  EReference getParametersOutptut_Params();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Parametersfunc <em>Parametersfunc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parametersfunc</em>'.
   * @see large.logic.forMathematics.statistics.llms.Parametersfunc
   * @generated
   */
  EClass getParametersfunc();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Bodies <em>Bodies</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bodies</em>'.
   * @see large.logic.forMathematics.statistics.llms.Bodies
   * @generated
   */
  EClass getBodies();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Bodies#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var</em>'.
   * @see large.logic.forMathematics.statistics.llms.Bodies#getVar()
   * @see #getBodies()
   * @generated
   */
  EReference getBodies_Var();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Bodies#getLoops <em>Loops</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Loops</em>'.
   * @see large.logic.forMathematics.statistics.llms.Bodies#getLoops()
   * @see #getBodies()
   * @generated
   */
  EReference getBodies_Loops();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Bodies#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Cond</em>'.
   * @see large.logic.forMathematics.statistics.llms.Bodies#getCond()
   * @see #getBodies()
   * @generated
   */
  EReference getBodies_Cond();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.varParmArgs <em>var Parm Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Parm Args</em>'.
   * @see large.logic.forMathematics.statistics.llms.varParmArgs
   * @generated
   */
  EClass getvarParmArgs();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.varParmArgs#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see large.logic.forMathematics.statistics.llms.varParmArgs#getName()
   * @see #getvarParmArgs()
   * @generated
   */
  EAttribute getvarParmArgs_Name();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.varParmArgs#getDataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Data Type</em>'.
   * @see large.logic.forMathematics.statistics.llms.varParmArgs#getDataType()
   * @see #getvarParmArgs()
   * @generated
   */
  EAttribute getvarParmArgs_DataType();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.varParmArgs#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see large.logic.forMathematics.statistics.llms.varParmArgs#getExp()
   * @see #getvarParmArgs()
   * @generated
   */
  EReference getvarParmArgs_Exp();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see large.logic.forMathematics.statistics.llms.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Expression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Op</em>'.
   * @see large.logic.forMathematics.statistics.llms.Expression#getOp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Op();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.GenericVariable <em>Generic Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Generic Variable</em>'.
   * @see large.logic.forMathematics.statistics.llms.GenericVariable
   * @generated
   */
  EClass getGenericVariable();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Loops <em>Loops</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loops</em>'.
   * @see large.logic.forMathematics.statistics.llms.Loops
   * @generated
   */
  EClass getLoops();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Fors <em>Fors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fors</em>'.
   * @see large.logic.forMathematics.statistics.llms.Fors
   * @generated
   */
  EClass getFors();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Fors#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see large.logic.forMathematics.statistics.llms.Fors#getVar()
   * @see #getFors()
   * @generated
   */
  EReference getFors_Var();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Fors#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see large.logic.forMathematics.statistics.llms.Fors#getNumber()
   * @see #getFors()
   * @generated
   */
  EReference getFors_Number();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Fors#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see large.logic.forMathematics.statistics.llms.Fors#getBody()
   * @see #getFors()
   * @generated
   */
  EReference getFors_Body();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Whiles <em>Whiles</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Whiles</em>'.
   * @see large.logic.forMathematics.statistics.llms.Whiles
   * @generated
   */
  EClass getWhiles();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Whiles#getLogical <em>Logical</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Logical</em>'.
   * @see large.logic.forMathematics.statistics.llms.Whiles#getLogical()
   * @see #getWhiles()
   * @generated
   */
  EReference getWhiles_Logical();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Whiles#getBodie <em>Bodie</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Bodie</em>'.
   * @see large.logic.forMathematics.statistics.llms.Whiles#getBodie()
   * @see #getWhiles()
   * @generated
   */
  EReference getWhiles_Bodie();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Conditionals <em>Conditionals</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditionals</em>'.
   * @see large.logic.forMathematics.statistics.llms.Conditionals
   * @generated
   */
  EClass getConditionals();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Conditionals#getIfs <em>Ifs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ifs</em>'.
   * @see large.logic.forMathematics.statistics.llms.Conditionals#getIfs()
   * @see #getConditionals()
   * @generated
   */
  EReference getConditionals_Ifs();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Conditionals#getElseif <em>Elseif</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elseif</em>'.
   * @see large.logic.forMathematics.statistics.llms.Conditionals#getElseif()
   * @see #getConditionals()
   * @generated
   */
  EReference getConditionals_Elseif();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Conditionals#getElses <em>Elses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Elses</em>'.
   * @see large.logic.forMathematics.statistics.llms.Conditionals#getElses()
   * @see #getConditionals()
   * @generated
   */
  EReference getConditionals_Elses();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Ifs <em>Ifs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ifs</em>'.
   * @see large.logic.forMathematics.statistics.llms.Ifs
   * @generated
   */
  EClass getIfs();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Ifs#getLg <em>Lg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lg</em>'.
   * @see large.logic.forMathematics.statistics.llms.Ifs#getLg()
   * @see #getIfs()
   * @generated
   */
  EReference getIfs_Lg();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Ifs#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see large.logic.forMathematics.statistics.llms.Ifs#getBody()
   * @see #getIfs()
   * @generated
   */
  EReference getIfs_Body();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.ElseIfs <em>Else Ifs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else Ifs</em>'.
   * @see large.logic.forMathematics.statistics.llms.ElseIfs
   * @generated
   */
  EClass getElseIfs();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.ElseIfs#getLogicParms <em>Logic Parms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Logic Parms</em>'.
   * @see large.logic.forMathematics.statistics.llms.ElseIfs#getLogicParms()
   * @see #getElseIfs()
   * @generated
   */
  EReference getElseIfs_LogicParms();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.ElseIfs#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see large.logic.forMathematics.statistics.llms.ElseIfs#getBody()
   * @see #getElseIfs()
   * @generated
   */
  EReference getElseIfs_Body();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Elses <em>Elses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Elses</em>'.
   * @see large.logic.forMathematics.statistics.llms.Elses
   * @generated
   */
  EClass getElses();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Elses#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see large.logic.forMathematics.statistics.llms.Elses#getBody()
   * @see #getElses()
   * @generated
   */
  EReference getElses_Body();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.ParmsPrint <em>Parms Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parms Print</em>'.
   * @see large.logic.forMathematics.statistics.llms.ParmsPrint
   * @generated
   */
  EClass getParmsPrint();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.CallFunction <em>Call Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Call Function</em>'.
   * @see large.logic.forMathematics.statistics.llms.CallFunction
   * @generated
   */
  EClass getCallFunction();

  /**
   * Returns the meta object for the reference '{@link large.logic.forMathematics.statistics.llms.CallFunction#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Func</em>'.
   * @see large.logic.forMathematics.statistics.llms.CallFunction#getFunc()
   * @see #getCallFunction()
   * @generated
   */
  EReference getCallFunction_Func();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.CallFunction#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see large.logic.forMathematics.statistics.llms.CallFunction#getExp()
   * @see #getCallFunction()
   * @generated
   */
  EReference getCallFunction_Exp();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.CallVariable <em>Call Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Call Variable</em>'.
   * @see large.logic.forMathematics.statistics.llms.CallVariable
   * @generated
   */
  EClass getCallVariable();

  /**
   * Returns the meta object for the reference '{@link large.logic.forMathematics.statistics.llms.CallVariable#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Vars</em>'.
   * @see large.logic.forMathematics.statistics.llms.CallVariable#getVars()
   * @see #getCallVariable()
   * @generated
   */
  EReference getCallVariable_Vars();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.OnlyVar <em>Only Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Only Var</em>'.
   * @see large.logic.forMathematics.statistics.llms.OnlyVar
   * @generated
   */
  EClass getOnlyVar();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.OnlyVar#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see large.logic.forMathematics.statistics.llms.OnlyVar#getName()
   * @see #getOnlyVar()
   * @generated
   */
  EAttribute getOnlyVar_Name();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.OnlyVar#getDataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Data Type</em>'.
   * @see large.logic.forMathematics.statistics.llms.OnlyVar#getDataType()
   * @see #getOnlyVar()
   * @generated
   */
  EAttribute getOnlyVar_DataType();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see large.logic.forMathematics.statistics.llms.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the reference '{@link large.logic.forMathematics.statistics.llms.Assignment#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Vars</em>'.
   * @see large.logic.forMathematics.statistics.llms.Assignment#getVars()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Vars();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Assignment#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see large.logic.forMathematics.statistics.llms.Assignment#getExp()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Exp();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.LogicalParams <em>Logical Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Params</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalParams
   * @generated
   */
  EClass getLogicalParams();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Operation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation</em>'.
   * @see large.logic.forMathematics.statistics.llms.Operation
   * @generated
   */
  EClass getOperation();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.LogicalOperation <em>Logical Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logical Operation</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalOperation
   * @generated
   */
  EClass getLogicalOperation();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.LogicalOperation#getBoolFunc <em>Bool Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Bool Func</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalOperation#getBoolFunc()
   * @see #getLogicalOperation()
   * @generated
   */
  EReference getLogicalOperation_BoolFunc();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.LogicalOperation#getLgicOp <em>Lgic Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Lgic Op</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalOperation#getLgicOp()
   * @see #getLogicalOperation()
   * @generated
   */
  EReference getLogicalOperation_LgicOp();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.LogicalOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalOperation#getLeft()
   * @see #getLogicalOperation()
   * @generated
   */
  EReference getLogicalOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.LogicalOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see large.logic.forMathematics.statistics.llms.LogicalOperation#getRight()
   * @see #getLogicalOperation()
   * @generated
   */
  EReference getLogicalOperation_Right();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.LessThan <em>Less Than</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Less Than</em>'.
   * @see large.logic.forMathematics.statistics.llms.LessThan
   * @generated
   */
  EClass getLessThan();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.GreaterThan <em>Greater Than</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Greater Than</em>'.
   * @see large.logic.forMathematics.statistics.llms.GreaterThan
   * @generated
   */
  EClass getGreaterThan();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Equal <em>Equal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equal</em>'.
   * @see large.logic.forMathematics.statistics.llms.Equal
   * @generated
   */
  EClass getEqual();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.NotEqual <em>Not Equal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Equal</em>'.
   * @see large.logic.forMathematics.statistics.llms.NotEqual
   * @generated
   */
  EClass getNotEqual();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.LessOrEqual <em>Less Or Equal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Less Or Equal</em>'.
   * @see large.logic.forMathematics.statistics.llms.LessOrEqual
   * @generated
   */
  EClass getLessOrEqual();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.GreaterOrEqual <em>Greater Or Equal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Greater Or Equal</em>'.
   * @see large.logic.forMathematics.statistics.llms.GreaterOrEqual
   * @generated
   */
  EClass getGreaterOrEqual();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.BooleanFunction <em>Boolean Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Function</em>'.
   * @see large.logic.forMathematics.statistics.llms.BooleanFunction
   * @generated
   */
  EClass getBooleanFunction();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.BooleanFunction#getPrimary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Primary</em>'.
   * @see large.logic.forMathematics.statistics.llms.BooleanFunction#getPrimary()
   * @see #getBooleanFunction()
   * @generated
   */
  EReference getBooleanFunction_Primary();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Ands <em>Ands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ands</em>'.
   * @see large.logic.forMathematics.statistics.llms.Ands
   * @generated
   */
  EClass getAnds();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Ors <em>Ors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ors</em>'.
   * @see large.logic.forMathematics.statistics.llms.Ors
   * @generated
   */
  EClass getOrs();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Nots <em>Nots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nots</em>'.
   * @see large.logic.forMathematics.statistics.llms.Nots
   * @generated
   */
  EClass getNots();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Nors <em>Nors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nors</em>'.
   * @see large.logic.forMathematics.statistics.llms.Nors
   * @generated
   */
  EClass getNors();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Nands <em>Nands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nands</em>'.
   * @see large.logic.forMathematics.statistics.llms.Nands
   * @generated
   */
  EClass getNands();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.AritmeticOperation <em>Aritmetic Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aritmetic Operation</em>'.
   * @see large.logic.forMathematics.statistics.llms.AritmeticOperation
   * @generated
   */
  EClass getAritmeticOperation();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.AritmeticOperation#getSum <em>Sum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sum</em>'.
   * @see large.logic.forMathematics.statistics.llms.AritmeticOperation#getSum()
   * @see #getAritmeticOperation()
   * @generated
   */
  EReference getAritmeticOperation_Sum();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Expressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expressions</em>'.
   * @see large.logic.forMathematics.statistics.llms.Expressions
   * @generated
   */
  EClass getExpressions();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Primary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary</em>'.
   * @see large.logic.forMathematics.statistics.llms.Primary
   * @generated
   */
  EClass getPrimary();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Datas <em>Datas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Datas</em>'.
   * @see large.logic.forMathematics.statistics.llms.Datas
   * @generated
   */
  EClass getDatas();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Numbers <em>Numbers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Numbers</em>'.
   * @see large.logic.forMathematics.statistics.llms.Numbers
   * @generated
   */
  EClass getNumbers();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Numbers#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see large.logic.forMathematics.statistics.llms.Numbers#getValue()
   * @see #getNumbers()
   * @generated
   */
  EAttribute getNumbers_Value();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Strings <em>Strings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Strings</em>'.
   * @see large.logic.forMathematics.statistics.llms.Strings
   * @generated
   */
  EClass getStrings();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Strings#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see large.logic.forMathematics.statistics.llms.Strings#getValue()
   * @see #getStrings()
   * @generated
   */
  EAttribute getStrings_Value();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Booleans <em>Booleans</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Booleans</em>'.
   * @see large.logic.forMathematics.statistics.llms.Booleans
   * @generated
   */
  EClass getBooleans();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Booleans#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see large.logic.forMathematics.statistics.llms.Booleans#isValue()
   * @see #getBooleans()
   * @generated
   */
  EAttribute getBooleans_Value();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Doubles <em>Doubles</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Doubles</em>'.
   * @see large.logic.forMathematics.statistics.llms.Doubles
   * @generated
   */
  EClass getDoubles();

  /**
   * Returns the meta object for the attribute '{@link large.logic.forMathematics.statistics.llms.Doubles#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see large.logic.forMathematics.statistics.llms.Doubles#getValue()
   * @see #getDoubles()
   * @generated
   */
  EAttribute getDoubles_Value();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Prints <em>Prints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prints</em>'.
   * @see large.logic.forMathematics.statistics.llms.Prints
   * @generated
   */
  EClass getPrints();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.Prints#getPrint <em>Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Print</em>'.
   * @see large.logic.forMathematics.statistics.llms.Prints#getPrint()
   * @see #getPrints()
   * @generated
   */
  EReference getPrints_Print();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.funOutputs <em>fun Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fun Outputs</em>'.
   * @see large.logic.forMathematics.statistics.llms.funOutputs
   * @generated
   */
  EClass getfunOutputs();

  /**
   * Returns the meta object for the containment reference list '{@link large.logic.forMathematics.statistics.llms.funOutputs#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see large.logic.forMathematics.statistics.llms.funOutputs#getParams()
   * @see #getfunOutputs()
   * @generated
   */
  EReference getfunOutputs_Params();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Sum <em>Sum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sum</em>'.
   * @see large.logic.forMathematics.statistics.llms.Sum
   * @generated
   */
  EClass getSum();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Sum#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see large.logic.forMathematics.statistics.llms.Sum#getLeft()
   * @see #getSum()
   * @generated
   */
  EReference getSum_Left();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Sum#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see large.logic.forMathematics.statistics.llms.Sum#getRight()
   * @see #getSum()
   * @generated
   */
  EReference getSum_Right();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Subs <em>Subs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subs</em>'.
   * @see large.logic.forMathematics.statistics.llms.Subs
   * @generated
   */
  EClass getSubs();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Subs#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see large.logic.forMathematics.statistics.llms.Subs#getLeft()
   * @see #getSubs()
   * @generated
   */
  EReference getSubs_Left();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Subs#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see large.logic.forMathematics.statistics.llms.Subs#getRight()
   * @see #getSubs()
   * @generated
   */
  EReference getSubs_Right();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Divition <em>Divition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Divition</em>'.
   * @see large.logic.forMathematics.statistics.llms.Divition
   * @generated
   */
  EClass getDivition();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Divition#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see large.logic.forMathematics.statistics.llms.Divition#getLeft()
   * @see #getDivition()
   * @generated
   */
  EReference getDivition_Left();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Divition#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see large.logic.forMathematics.statistics.llms.Divition#getRight()
   * @see #getDivition()
   * @generated
   */
  EReference getDivition_Right();

  /**
   * Returns the meta object for class '{@link large.logic.forMathematics.statistics.llms.Multiplication <em>Multiplication</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplication</em>'.
   * @see large.logic.forMathematics.statistics.llms.Multiplication
   * @generated
   */
  EClass getMultiplication();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Multiplication#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see large.logic.forMathematics.statistics.llms.Multiplication#getLeft()
   * @see #getMultiplication()
   * @generated
   */
  EReference getMultiplication_Left();

  /**
   * Returns the meta object for the containment reference '{@link large.logic.forMathematics.statistics.llms.Multiplication#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see large.logic.forMathematics.statistics.llms.Multiplication#getRight()
   * @see #getMultiplication()
   * @generated
   */
  EReference getMultiplication_Right();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LlmsFactory getLlmsFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.OperationsImpl <em>Operations</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.OperationsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOperations()
     * @generated
     */
    EClass OPERATIONS = eINSTANCE.getOperations();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATIONS__NAME = eINSTANCE.getOperations_Name();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS__FUNC = eINSTANCE.getOperations_Func();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS__VARS = eINSTANCE.getOperations_Vars();

    /**
     * The meta object literal for the '<em><b>Conditional</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS__CONDITIONAL = eINSTANCE.getOperations_Conditional();

    /**
     * The meta object literal for the '<em><b>Loops</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS__LOOPS = eINSTANCE.getOperations_Loops();

    /**
     * The meta object literal for the '<em><b>Print</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS__PRINT = eINSTANCE.getOperations_Print();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.FunctionsImpl <em>Functions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.FunctionsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getFunctions()
     * @generated
     */
    EClass FUNCTIONS = eINSTANCE.getFunctions();

    /**
     * The meta object literal for the '<em><b>Output</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTIONS__OUTPUT = eINSTANCE.getFunctions_Output();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTIONS__NAME = eINSTANCE.getFunctions_Name();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTIONS__PARAMS = eINSTANCE.getFunctions_Params();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTIONS__BODY = eINSTANCE.getFunctions_Body();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ParametersOutptutImpl <em>Parameters Outptut</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ParametersOutptutImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParametersOutptut()
     * @generated
     */
    EClass PARAMETERS_OUTPTUT = eINSTANCE.getParametersOutptut();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETERS_OUTPTUT__PARAM = eINSTANCE.getParametersOutptut_Param();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETERS_OUTPTUT__PARAMS = eINSTANCE.getParametersOutptut_Params();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ParametersfuncImpl <em>Parametersfunc</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ParametersfuncImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParametersfunc()
     * @generated
     */
    EClass PARAMETERSFUNC = eINSTANCE.getParametersfunc();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.BodiesImpl <em>Bodies</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.BodiesImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBodies()
     * @generated
     */
    EClass BODIES = eINSTANCE.getBodies();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODIES__VAR = eINSTANCE.getBodies_Var();

    /**
     * The meta object literal for the '<em><b>Loops</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODIES__LOOPS = eINSTANCE.getBodies_Loops();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODIES__COND = eINSTANCE.getBodies_Cond();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.varParmArgsImpl <em>var Parm Args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.varParmArgsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getvarParmArgs()
     * @generated
     */
    EClass VAR_PARM_ARGS = eINSTANCE.getvarParmArgs();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_PARM_ARGS__NAME = eINSTANCE.getvarParmArgs_Name();

    /**
     * The meta object literal for the '<em><b>Data Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_PARM_ARGS__DATA_TYPE = eINSTANCE.getvarParmArgs_DataType();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_PARM_ARGS__EXP = eINSTANCE.getvarParmArgs_Exp();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ExpressionImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__OP = eINSTANCE.getExpression_Op();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.GenericVariableImpl <em>Generic Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.GenericVariableImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGenericVariable()
     * @generated
     */
    EClass GENERIC_VARIABLE = eINSTANCE.getGenericVariable();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.LoopsImpl <em>Loops</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.LoopsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLoops()
     * @generated
     */
    EClass LOOPS = eINSTANCE.getLoops();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ForsImpl <em>Fors</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ForsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getFors()
     * @generated
     */
    EClass FORS = eINSTANCE.getFors();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORS__VAR = eINSTANCE.getFors_Var();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORS__NUMBER = eINSTANCE.getFors_Number();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORS__BODY = eINSTANCE.getFors_Body();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.WhilesImpl <em>Whiles</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.WhilesImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getWhiles()
     * @generated
     */
    EClass WHILES = eINSTANCE.getWhiles();

    /**
     * The meta object literal for the '<em><b>Logical</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILES__LOGICAL = eINSTANCE.getWhiles_Logical();

    /**
     * The meta object literal for the '<em><b>Bodie</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILES__BODIE = eINSTANCE.getWhiles_Bodie();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ConditionalsImpl <em>Conditionals</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ConditionalsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getConditionals()
     * @generated
     */
    EClass CONDITIONALS = eINSTANCE.getConditionals();

    /**
     * The meta object literal for the '<em><b>Ifs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONALS__IFS = eINSTANCE.getConditionals_Ifs();

    /**
     * The meta object literal for the '<em><b>Elseif</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONALS__ELSEIF = eINSTANCE.getConditionals_Elseif();

    /**
     * The meta object literal for the '<em><b>Elses</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONALS__ELSES = eINSTANCE.getConditionals_Elses();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.IfsImpl <em>Ifs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.IfsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getIfs()
     * @generated
     */
    EClass IFS = eINSTANCE.getIfs();

    /**
     * The meta object literal for the '<em><b>Lg</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IFS__LG = eINSTANCE.getIfs_Lg();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IFS__BODY = eINSTANCE.getIfs_Body();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ElseIfsImpl <em>Else Ifs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ElseIfsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getElseIfs()
     * @generated
     */
    EClass ELSE_IFS = eINSTANCE.getElseIfs();

    /**
     * The meta object literal for the '<em><b>Logic Parms</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IFS__LOGIC_PARMS = eINSTANCE.getElseIfs_LogicParms();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_IFS__BODY = eINSTANCE.getElseIfs_Body();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ElsesImpl <em>Elses</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ElsesImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getElses()
     * @generated
     */
    EClass ELSES = eINSTANCE.getElses();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSES__BODY = eINSTANCE.getElses_Body();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ParmsPrintImpl <em>Parms Print</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ParmsPrintImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getParmsPrint()
     * @generated
     */
    EClass PARMS_PRINT = eINSTANCE.getParmsPrint();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.CallFunctionImpl <em>Call Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.CallFunctionImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getCallFunction()
     * @generated
     */
    EClass CALL_FUNCTION = eINSTANCE.getCallFunction();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALL_FUNCTION__FUNC = eINSTANCE.getCallFunction_Func();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALL_FUNCTION__EXP = eINSTANCE.getCallFunction_Exp();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.CallVariableImpl <em>Call Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.CallVariableImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getCallVariable()
     * @generated
     */
    EClass CALL_VARIABLE = eINSTANCE.getCallVariable();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALL_VARIABLE__VARS = eINSTANCE.getCallVariable_Vars();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.OnlyVarImpl <em>Only Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.OnlyVarImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOnlyVar()
     * @generated
     */
    EClass ONLY_VAR = eINSTANCE.getOnlyVar();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ONLY_VAR__NAME = eINSTANCE.getOnlyVar_Name();

    /**
     * The meta object literal for the '<em><b>Data Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ONLY_VAR__DATA_TYPE = eINSTANCE.getOnlyVar_DataType();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.AssignmentImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__VARS = eINSTANCE.getAssignment_Vars();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__EXP = eINSTANCE.getAssignment_Exp();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.LogicalParamsImpl <em>Logical Params</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.LogicalParamsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLogicalParams()
     * @generated
     */
    EClass LOGICAL_PARAMS = eINSTANCE.getLogicalParams();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.OperationImpl <em>Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.OperationImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOperation()
     * @generated
     */
    EClass OPERATION = eINSTANCE.getOperation();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.LogicalOperationImpl <em>Logical Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.LogicalOperationImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLogicalOperation()
     * @generated
     */
    EClass LOGICAL_OPERATION = eINSTANCE.getLogicalOperation();

    /**
     * The meta object literal for the '<em><b>Bool Func</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_OPERATION__BOOL_FUNC = eINSTANCE.getLogicalOperation_BoolFunc();

    /**
     * The meta object literal for the '<em><b>Lgic Op</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_OPERATION__LGIC_OP = eINSTANCE.getLogicalOperation_LgicOp();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_OPERATION__LEFT = eINSTANCE.getLogicalOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGICAL_OPERATION__RIGHT = eINSTANCE.getLogicalOperation_Right();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.LessThanImpl <em>Less Than</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.LessThanImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLessThan()
     * @generated
     */
    EClass LESS_THAN = eINSTANCE.getLessThan();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.GreaterThanImpl <em>Greater Than</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.GreaterThanImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGreaterThan()
     * @generated
     */
    EClass GREATER_THAN = eINSTANCE.getGreaterThan();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.EqualImpl <em>Equal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.EqualImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getEqual()
     * @generated
     */
    EClass EQUAL = eINSTANCE.getEqual();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.NotEqualImpl <em>Not Equal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.NotEqualImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNotEqual()
     * @generated
     */
    EClass NOT_EQUAL = eINSTANCE.getNotEqual();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.LessOrEqualImpl <em>Less Or Equal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.LessOrEqualImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getLessOrEqual()
     * @generated
     */
    EClass LESS_OR_EQUAL = eINSTANCE.getLessOrEqual();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.GreaterOrEqualImpl <em>Greater Or Equal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.GreaterOrEqualImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getGreaterOrEqual()
     * @generated
     */
    EClass GREATER_OR_EQUAL = eINSTANCE.getGreaterOrEqual();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.BooleanFunctionImpl <em>Boolean Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.BooleanFunctionImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBooleanFunction()
     * @generated
     */
    EClass BOOLEAN_FUNCTION = eINSTANCE.getBooleanFunction();

    /**
     * The meta object literal for the '<em><b>Primary</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_FUNCTION__PRIMARY = eINSTANCE.getBooleanFunction_Primary();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.AndsImpl <em>Ands</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.AndsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAnds()
     * @generated
     */
    EClass ANDS = eINSTANCE.getAnds();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.OrsImpl <em>Ors</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.OrsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getOrs()
     * @generated
     */
    EClass ORS = eINSTANCE.getOrs();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.NotsImpl <em>Nots</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.NotsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNots()
     * @generated
     */
    EClass NOTS = eINSTANCE.getNots();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.NorsImpl <em>Nors</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.NorsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNors()
     * @generated
     */
    EClass NORS = eINSTANCE.getNors();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.NandsImpl <em>Nands</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.NandsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNands()
     * @generated
     */
    EClass NANDS = eINSTANCE.getNands();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.AritmeticOperationImpl <em>Aritmetic Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.AritmeticOperationImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getAritmeticOperation()
     * @generated
     */
    EClass ARITMETIC_OPERATION = eINSTANCE.getAritmeticOperation();

    /**
     * The meta object literal for the '<em><b>Sum</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITMETIC_OPERATION__SUM = eINSTANCE.getAritmeticOperation_Sum();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.ExpressionsImpl <em>Expressions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.ExpressionsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getExpressions()
     * @generated
     */
    EClass EXPRESSIONS = eINSTANCE.getExpressions();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.PrimaryImpl <em>Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.PrimaryImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getPrimary()
     * @generated
     */
    EClass PRIMARY = eINSTANCE.getPrimary();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.DatasImpl <em>Datas</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.DatasImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDatas()
     * @generated
     */
    EClass DATAS = eINSTANCE.getDatas();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.NumbersImpl <em>Numbers</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.NumbersImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getNumbers()
     * @generated
     */
    EClass NUMBERS = eINSTANCE.getNumbers();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBERS__VALUE = eINSTANCE.getNumbers_Value();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.StringsImpl <em>Strings</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.StringsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getStrings()
     * @generated
     */
    EClass STRINGS = eINSTANCE.getStrings();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRINGS__VALUE = eINSTANCE.getStrings_Value();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.BooleansImpl <em>Booleans</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.BooleansImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getBooleans()
     * @generated
     */
    EClass BOOLEANS = eINSTANCE.getBooleans();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEANS__VALUE = eINSTANCE.getBooleans_Value();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.DoublesImpl <em>Doubles</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.DoublesImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDoubles()
     * @generated
     */
    EClass DOUBLES = eINSTANCE.getDoubles();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DOUBLES__VALUE = eINSTANCE.getDoubles_Value();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.PrintsImpl <em>Prints</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.PrintsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getPrints()
     * @generated
     */
    EClass PRINTS = eINSTANCE.getPrints();

    /**
     * The meta object literal for the '<em><b>Print</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINTS__PRINT = eINSTANCE.getPrints_Print();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.funOutputsImpl <em>fun Outputs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.funOutputsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getfunOutputs()
     * @generated
     */
    EClass FUN_OUTPUTS = eINSTANCE.getfunOutputs();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_OUTPUTS__PARAMS = eINSTANCE.getfunOutputs_Params();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.SumImpl <em>Sum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.SumImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getSum()
     * @generated
     */
    EClass SUM = eINSTANCE.getSum();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUM__LEFT = eINSTANCE.getSum_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUM__RIGHT = eINSTANCE.getSum_Right();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.SubsImpl <em>Subs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.SubsImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getSubs()
     * @generated
     */
    EClass SUBS = eINSTANCE.getSubs();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBS__LEFT = eINSTANCE.getSubs_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBS__RIGHT = eINSTANCE.getSubs_Right();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.DivitionImpl <em>Divition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.DivitionImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getDivition()
     * @generated
     */
    EClass DIVITION = eINSTANCE.getDivition();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIVITION__LEFT = eINSTANCE.getDivition_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIVITION__RIGHT = eINSTANCE.getDivition_Right();

    /**
     * The meta object literal for the '{@link large.logic.forMathematics.statistics.llms.impl.MultiplicationImpl <em>Multiplication</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see large.logic.forMathematics.statistics.llms.impl.MultiplicationImpl
     * @see large.logic.forMathematics.statistics.llms.impl.LlmsPackageImpl#getMultiplication()
     * @generated
     */
    EClass MULTIPLICATION = eINSTANCE.getMultiplication();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATION__LEFT = eINSTANCE.getMultiplication_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATION__RIGHT = eINSTANCE.getMultiplication_Right();

  }

} //LlmsPackage
